import { SvelteComponent } from "svelte";
import type { Dismissable } from '../types';
declare const __propDef: {
    props: import("svelte/elements").HTMLAnchorAttributes & {
        tag?: string | undefined;
        color?: "gray" | "red" | "yellow" | "green" | "indigo" | "purple" | "pink" | "blue" | "light" | "dark" | "default" | "dropdown" | "navbar" | "navbarUl" | "form" | "primary" | "orange" | "none" | undefined;
        rounded?: boolean | undefined;
        border?: boolean | undefined;
        shadow?: boolean | undefined;
        transition?: ((node: HTMLElement, params: any) => import("svelte/transition").TransitionConfig) | undefined;
        params?: object | undefined;
        node?: HTMLElement | undefined;
        use?: import("svelte/action").Action<HTMLElement, any, Record<never, any>> | undefined;
        options?: object | undefined;
        class?: string | undefined;
        role?: string | undefined;
    } & Dismissable & {
        color?: "gray" | "red" | "yellow" | "green" | "indigo" | "purple" | "blue" | "primary" | "orange" | "none" | undefined;
        position?: "none" | "top-left" | "top-right" | "bottom-left" | "bottom-right" | undefined;
        open?: boolean | undefined;
        divClass?: string | undefined;
        defaultIconClass?: string | undefined;
        extraIconClass?: string | undefined;
        contentClass?: string | undefined;
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        icon: {};
        default: {};
        'close-button': {
            close: (e: MouseEvent) => void;
        };
    };
};
export type ToastProps = typeof __propDef.props;
export type ToastEvents = typeof __propDef.events;
export type ToastSlots = typeof __propDef.slots;
/**
 * [Go to docs](https://flowbite-svelte.com/)
 * ## Props
 * @prop export let dismissable: boolean = true;
 * @prop export let color: 'primary' | 'gray' | 'red' | 'yellow' | 'green' | 'blue' | 'indigo' | 'purple' | 'orange' | 'none' = 'primary';
 * @prop export let position: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right' | 'none' = 'none';
 * @prop export let open: boolean = true;
 * @prop export let divClass: string = 'w-full max-w-xs p-4 text-gray-500 bg-white shadow dark:text-gray-400 dark:bg-gray-800 gap-3';
 * @prop export let defaultIconClass: string = 'w-8 h-8';
 * @prop export let contentClass: string = 'w-full text-sm font-normal';
 * @prop export let align: boolean = true;
 */
export default class Toast extends SvelteComponent<ToastProps, ToastEvents, ToastSlots> {
}
export {};
//# sourceMappingURL=Toast.svelte.d.ts.map
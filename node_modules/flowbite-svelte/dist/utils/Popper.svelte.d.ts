import { SvelteComponent } from "svelte";
import type { Placement } from '@floating-ui/dom';
declare const __propDef: {
    props: import("svelte/elements").HTMLAnchorAttributes & {
        tag?: string | undefined;
        color?: "gray" | "red" | "yellow" | "green" | "indigo" | "purple" | "pink" | "blue" | "light" | "dark" | "default" | "dropdown" | "navbar" | "navbarUl" | "form" | "primary" | "orange" | "none" | undefined;
        rounded?: boolean | undefined;
        border?: boolean | undefined;
        shadow?: boolean | undefined;
        transition?: ((node: HTMLElement, params: any) => import("svelte/transition").TransitionConfig) | undefined;
        params?: object | undefined;
        node?: HTMLElement | undefined;
        use?: import("svelte/action").Action<HTMLElement, any, Record<never, any>> | undefined;
        options?: object | undefined;
        class?: string | undefined;
        role?: string | undefined;
    } & {
        activeContent?: boolean | undefined;
        arrow?: boolean | undefined;
        offset?: number | undefined;
        placement?: Placement | undefined;
        trigger?: "click" | "hover" | undefined;
        triggeredBy?: string | undefined;
        reference?: string | undefined;
        strategy?: "fixed" | "absolute" | undefined;
        open?: boolean | undefined;
        yOnly?: boolean | undefined;
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        default: {};
    };
};
export type PopperProps = typeof __propDef.props;
export type PopperEvents = typeof __propDef.events;
export type PopperSlots = typeof __propDef.slots;
/**
 * [Go to docs](https://flowbite-svelte.com/)
 * ## Props
 * @prop export let activeContent: boolean = false;
 * @prop export let arrow: boolean = true;
 * @prop export let offset: number = 8;
 * @prop export let placement: Placement = 'top';
 * @prop export let trigger: 'hover' | 'click' = 'hover';
 * @prop export let triggeredBy: string | undefined = undefined;
 * @prop export let reference: string | undefined = undefined;
 * @prop export let strategy: 'absolute' | 'fixed' = 'absolute';
 * @prop export let open: boolean = false;
 * @prop export let yOnly: boolean = false;
 */
export default class Popper extends SvelteComponent<PopperProps, PopperEvents, PopperSlots> {
}
export {};
//# sourceMappingURL=Popper.svelte.d.ts.map
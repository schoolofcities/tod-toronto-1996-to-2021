import { SvelteComponentTyped } from "svelte";
declare const __propDef: {
    props: {
        [x: string]: any;
        size?: "xs" | "sm" | "md" | "lg" | "xl" | undefined;
        role?: string | undefined;
        strokeLinecap?: 'round' | 'inherit' | 'butt' | 'square' | null | undefined;
        strokeLinejoin?: 'round' | 'inherit' | 'miter' | 'bevel' | null | undefined;
        strokeWidth?: string | undefined;
        ariaLabel?: string | undefined;
    };
    events: {
        click: MouseEvent;
        keydown: KeyboardEvent;
        keyup: KeyboardEvent;
        focus: FocusEvent;
        blur: FocusEvent;
        mouseenter: MouseEvent;
        mouseleave: MouseEvent;
        mouseover: MouseEvent;
        mouseout: MouseEvent;
    } & {
        [evt: string]: CustomEvent<any>;
    };
    slots: {};
};
export type PenNibOutlineProps = typeof __propDef.props;
export type PenNibOutlineEvents = typeof __propDef.events;
export type PenNibOutlineSlots = typeof __propDef.slots;
/**
 * [Go to docs](https://flowbite-svelte-icons.vercel.app/)
 * ## Props
 * @prop export let size: 'xs' | 'sm' | 'md' | 'lg' | 'xl' = ctx.size || 'md';
 * @prop export let role = ctx.role || 'img';
 * @prop export let strokeLinecap: 'round' | 'inherit' | 'butt' | 'square' | null | undefined =
 * ctx.strokeLinecap || 'round';
 * @prop export let strokeLinejoin: 'round' | 'inherit' | 'miter' | 'bevel' | null | undefined =
 * ctx.strokeLinejoin || 'round';
 * @prop export let strokeWidth = ctx.strokeWidth || '2';
 * @prop export let ariaLabel = 'pen nib outline';
 */
export default class PenNibOutline extends SvelteComponentTyped<PenNibOutlineProps, PenNibOutlineEvents, PenNibOutlineSlots> {
}
export {};
